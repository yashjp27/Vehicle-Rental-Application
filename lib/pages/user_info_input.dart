import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'Payment.dart';
import 'package:vehicle/RegisterPage.dart';

class UserInfoInput extends StatefulWidget {
  final String defaultEmail;
  final String VehicleName;
  final String VehicleType;
  final int totalCost;
  final String Insurance;
  final String imageUrl;
  final DateTime pickupDateTimestamp;
  final String pickupTime;
  final String pickupLocation;
  final DateTime dropOffDateTimestamp;
  final String dropOffTime;
  final String dropOffLocation;

  UserInfoInput({
    required this.defaultEmail,
    required this.VehicleName,
    required this.VehicleType,
    required this.totalCost,
    required this.Insurance,
    required this.imageUrl,
    required this.pickupDateTimestamp,
    required this.pickupTime,
    required this.pickupLocation,
    required this.dropOffDateTimestamp,
    required this.dropOffTime,
    required this.dropOffLocation,
  });

  @override
  _UserInfoInputState createState() => _UserInfoInputState();
}

class _UserInfoInputState extends State<UserInfoInput> {
  String? name = '';
  int? age;
  int? mobileNo;
  int? aadharId;
  String? licenseId = '';

  @override
  Widget build(BuildContext context) {
    return Container(
      margin: EdgeInsets.only(top: 40.0),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.all(Radius.circular(20.0)),
      ),
      padding: EdgeInsets.all(16.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          Text(
            'User Information', // Yellow heading
            style: TextStyle(
              fontSize: 24.0,
              fontWeight: FontWeight.bold,
              color: Colors.yellow,
            ),
          ),
          SizedBox(height: 20.0),
          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(
                'Email Id: ${widget.defaultEmail}', // Display Email Id
                style: TextStyle(
                  fontSize: 16.0,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ],
          ),
          SizedBox(height: 20.0),
          _buildInputField('Name', 'Enter your name', (value) {
            setState(() {
              name = value;
            });
          }),
          _buildInputField('Age', 'Enter your age', (value) {
            if (value != null) {
              setState(() {
                age = int.tryParse(value);
              });
            }
          }),
          _buildInputField('Mobile No.', 'Enter your mobile number', (value) {
            if (value != null) {
              setState(() {
                mobileNo = int.tryParse(value);
              });
            }
          }),
          _buildInputField('Aadhar ID', 'Optional', (value) {
            if (value != null) {
              setState(() {
                aadharId = int.tryParse(value);
              });
            }
          }),
          _buildInputField('Driving License ID', 'Optional', (value) {
            setState(() {
              licenseId = value;
            });
          }),
          SizedBox(height: 20),
          ElevatedButton(
            onPressed: () async {
              // Validate and handle user input here
              if (name != null &&
                  age != null &&
                  mobileNo != null &&
                  (aadharId != null || licenseId != null) &&
                  mobileNo.toString().length == 10 &&
                  (aadharId == null || aadharId.toString().length == 12)) {
                name = name ?? '';
                licenseId = licenseId ?? '';

                CollectionReference<Map<String, dynamic>> bookingsCollection =
                FirebaseFirestore.instance.collection('temporary');

                // Generate the next document ID
                int nextDocumentId = await _getNextDocumentId(bookingsCollection);

                // Add the data to Firestore with the autogenerated ID
                await bookingsCollection.doc(nextDocumentId.toString()).set({
                  'Email Id': widget.defaultEmail,
                  'VehicleName': widget.VehicleName,
                  'VehicleType': widget.VehicleType,
                  'totalCost': widget.totalCost,
                  'Insurance': widget.Insurance,
                  'imageUrl': widget.imageUrl,
                  'pickupDate': widget.pickupDateTimestamp,
                  'pickupTime': widget.pickupTime,
                  'pickupLocation': widget.pickupLocation,
                  'dropOffDate': widget.dropOffDateTimestamp,
                  'dropOffTime': widget.dropOffTime,
                  'dropOffLocation': widget.dropOffLocation,
                  'name': name,
                  'age': age,
                  'mobileNo': mobileNo,
                  'aadharId': aadharId,
                  'licenseId': licenseId,
                  'Status': 'No',
                });

                print('temporary added to Firestore.');

                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => Payment(
                    userName: name ?? '',
                    userEmail: widget.defaultEmail,
                    VehicleName: widget.VehicleName,
                    VehicleType: widget.VehicleType,
                    totalCost: widget.totalCost,
                    Insurance: widget.Insurance,
                    imageUrl: widget.imageUrl,
                    pickupDateTimestamp : widget.pickupDateTimestamp,
                    pickupTime : widget.pickupTime,
                    pickupLocation : widget.pickupLocation,
                    dropOffDateTimestamp : widget.dropOffDateTimestamp,
                    dropOffTime: widget.dropOffTime,
                    dropOffLocation: widget.dropOffLocation,
                    age: age ?? 20,
                    mobileNo: mobileNo ?? 7715083357,
                    aadharId: aadharId,
                    licenseId: licenseId?? '',
                  )),
                );
              } else {
                // Show an error message or alert the user to fill in required fields correctly.
                // You can display a Snackbar or Dialog here.
                print('Please fill in all required fields correctly.');
              }
            },
            child: Text('Continue'),
          ),
        ],
      ),
    );
  }

  Widget _buildInputField(String label, String hintText, void Function(String?) onChanged) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 16.0),
      child: TextField(
        onChanged: onChanged,
        decoration: InputDecoration(
          labelText: label,
          hintText: hintText,
          border: OutlineInputBorder(),
        ),
      ),
    );
  }

  Future<int> _getNextDocumentId(CollectionReference<Map<String, dynamic>> collectionRef) async {
    int nextId = 1;
    QuerySnapshot<Map<String, dynamic>> snapshot = await collectionRef.get();
    snapshot.docs.forEach((doc) {
      int? docId = int.tryParse(doc.id);
      if (docId != null && docId >= nextId) {
        nextId = docId + 1;
      }
    });
    return nextId;
  }
}
